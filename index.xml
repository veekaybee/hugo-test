<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tech Blog on ★★Vicki Boykis★★</title><link>https://veekaybee.github.io/hugo-test/</link><description>Recent content in Tech Blog on ★★Vicki Boykis★★</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><copyright>Copyright © 2021, Vicki Boykis.</copyright><lastBuildDate>Sun, 07 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://veekaybee.github.io/hugo-test/index.xml" rel="self" type="application/rss+xml"/><item><title>The programmer's brain in the lands of exploration and production</title><link>https://veekaybee.github.io/hugo-test/2021/11/07/the-programmers-brain-in-the-lands-of-exploration-and-production/</link><pubDate>Sun, 07 Nov 2021 00:00:00 +0000</pubDate><guid>https://veekaybee.github.io/hugo-test/2021/11/07/the-programmers-brain-in-the-lands-of-exploration-and-production/</guid><description>A lot of my brain space lately has been occupied by TypedPipes. A TypedPipe is the main object type that you work with in Scalding, a distributed data framework written as a wrapper in Scala around Cascading. Scalding was originally developed at Twitter, and adopted by many companies around the same time Apache Spark became popular.
A TypedPipe is a distributed array that “may or may not have been materialized to disk”, aka it’s a very large list of elements that exists mainly in the memory space of your program, where the memory space is usually the nodes of a distributed computational cluster.</description></item><item><title>Recsys 2021 Recap</title><link>https://veekaybee.github.io/hugo-test/2021/10/28/recsys-2021-recap/</link><pubDate>Thu, 28 Oct 2021 00:00:00 +0000</pubDate><guid>https://veekaybee.github.io/hugo-test/2021/10/28/recsys-2021-recap/</guid><description>April, Allan D&amp;rsquo;Arcangelo
Recsys 2021 was in October. Since I&amp;rsquo;m now focusing on this area of ML at work, I attended (virtually only, unfortunately, but the online experience was as good as it could be at a hybrid conference, so major hats off to the organizers!) at took around 30 pages of notes.
There was SO much content! In the interest of condensing my learnings before I forget them, here is some of the high-level content that was most interesting to me.</description></item><item><title>Doing small, fun projects</title><link>https://veekaybee.github.io/hugo-test/2021/10/10/doing-small-fun-projects/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://veekaybee.github.io/hugo-test/2021/10/10/doing-small-fun-projects/</guid><description>Airplane on Train, Natalia Goncharova
Last year, I gave a keynote at RStudio Conf where I encouraged people to fight the ennui of pandemic life and the boxed-in social platforms we operate on by building up their digital gardens.
I gave a few smaller examples of ways to do that, and now I have another one: building fun Streamlit apps.
Last year, I built a Streamlit app that did natural language processing to generate thinkpieces.</description></item><item><title>Reaching MLE (machine learning enlightenment)</title><link>https://veekaybee.github.io/hugo-test/2021/09/23/reaching-mle-machine-learning-enlightenment/</link><pubDate>Thu, 23 Sep 2021 00:00:00 +0000</pubDate><guid>https://veekaybee.github.io/hugo-test/2021/09/23/reaching-mle-machine-learning-enlightenment/</guid><description>Ivan Shishkin, The Field of Wheat
Once, on a crisp cloudless morning in early fall, a machine learning engineer left her home to seek the answers that she could not find, even in the newly-optimized Google results.
She closed her laptop, put on her backpack and hiking boots, and walked quietly out her door and past her mailbox, down a dusty path that led past a stream, until the houses around her gave way to broad fields full of ripening corn.</description></item><item><title>The local minima of suckiness</title><link>https://veekaybee.github.io/hugo-test/2021/08/05/the-local-minima-of-suckiness/</link><pubDate>Thu, 05 Aug 2021 00:00:00 +0000</pubDate><guid>https://veekaybee.github.io/hugo-test/2021/08/05/the-local-minima-of-suckiness/</guid><description>Key and Hand, Tamara Lempicka, 1941
I don&amp;rsquo;t usually deal in absolutes, but I now know this one thing to be fundamentally true: no one becomes a good software engineer by themselves. But in an industry that has always prided itself on the myth of the superstar ninja, the lone wolf, the self-taught genius, it can seem like good developers are not born - they rise out of the ground, fully-formed and churning out PRs in their wake.</description></item><item><title>Writing for distributed teams</title><link>https://veekaybee.github.io/hugo-test/2021/07/17/writing-for-distributed-teams/</link><pubDate>Sat, 17 Jul 2021 00:00:00 +0000</pubDate><guid>https://veekaybee.github.io/hugo-test/2021/07/17/writing-for-distributed-teams/</guid><description>This week was my first anniversary since I started at Automattic in the spring of 2020, and I was going through my work artifacts to reflect on what I&amp;rsquo;ve done so far this year. One thing that completely surprised me was that it turns out that I only sent 11 emails this entire year.
How is it possible? The answer is P2s.
For those not familiar with Automattic, the company behind WordPress.</description></item><item><title>The ritual of the deploy</title><link>https://veekaybee.github.io/hugo-test/2021/06/20/the-ritual-of-the-deploy/</link><pubDate>Sun, 20 Jun 2021 00:00:00 +0000</pubDate><guid>https://veekaybee.github.io/hugo-test/2021/06/20/the-ritual-of-the-deploy/</guid><description>Humans have always been terrible at dealing with uncertainty. Historically, we used to cope with it by inventing superstitions. The ancient world is filled with rituals to ward off potential ill omens during times that were especially out of the control of human capability.
A big example of this has been seafaring. Since six months to a year in a ship headed to an unknown destination with unknown weather events was a high-anxiety event, humans developed a host of superstitions to deal with them.</description></item><item><title>The humble hash aggregate</title><link>https://veekaybee.github.io/hugo-test/2021/06/06/the-humble-hash-aggregate/</link><pubDate>Sun, 06 Jun 2021 00:00:00 +0000</pubDate><guid>https://veekaybee.github.io/hugo-test/2021/06/06/the-humble-hash-aggregate/</guid><description>This post is an expansion of this tweet:
One of the important ways we learn when we&amp;rsquo;re growing up is by understanding patterns. As a mom of two young children, I&amp;rsquo;ve been lucky enough to witness this happen multiple times in the wild. Recently, my youngest, who is almost two, has learned the Russian word &amp;ldquo;еще&amp;rdquo;, or &amp;ldquo;more.&amp;rdquo; He&amp;rsquo;ll say it when he wants a second (or third) slice of watermelon.</description></item><item><title>The ghosts in the data</title><link>https://veekaybee.github.io/hugo-test/2021/03/26/the-ghosts-in-the-data/</link><pubDate>Fri, 26 Mar 2021 00:00:00 +0000</pubDate><guid>https://veekaybee.github.io/hugo-test/2021/03/26/the-ghosts-in-the-data/</guid><description>Bernadette Resha, Gathering of Ghosts (2014)
Something I&amp;rsquo;ve been thinking about recently as I&amp;rsquo;ve been working at a company that operates entirely remotely and mostly asynchronously during a time when most companies are working in some variation of this model is the idea of implicit versus explicit knowledge.
Explicit knowledge is anything that you can read about, knowledge that&amp;rsquo;s easy to share and pass on. Implicit knowledge is knowledge that people gain by context that&amp;rsquo;s very hard to pull out consciously.</description></item><item><title>Getting machine learning to production</title><link>https://veekaybee.github.io/hugo-test/2020/06/09/getting-machine-learning-to-production/</link><pubDate>Tue, 09 Jun 2020 00:00:00 +0000</pubDate><guid>https://veekaybee.github.io/hugo-test/2020/06/09/getting-machine-learning-to-production/</guid><description>Table of Contents
Intro The Mystery of Deploying ML Trying to Create Gandinsky Trying to Create Venti Venti Architecture Generating Venti Inferences Putting Venti on Streamlit Splitting out inference and front-end Deploying to the Cloud Lessons Learned Deploying is hard Deep learning is deceptively easy Go for prebuilt as much as possible Understand networking and scale Iterate quickly Art: The Other Side of the Rainbow, Roland Petersen, 1972</description></item><item><title>Securely storing configuration credentials in a Jupyter Notebook</title><link>https://veekaybee.github.io/hugo-test/2020/02/25/securely-storing-configuration-credentials-in-a-jupyter-notebook/</link><pubDate>Tue, 25 Feb 2020 00:00:00 +0000</pubDate><guid>https://veekaybee.github.io/hugo-test/2020/02/25/securely-storing-configuration-credentials-in-a-jupyter-notebook/</guid><description>Art: Mona Lisa with the Keys, Fernand Leger, 1930
Over the past few months, I&amp;rsquo;ve been slowly working my way to building up an intuition neural nets through a Generative Adversarial Network project based off DCGAN, to generate new artworks in a given style.
Since I&amp;rsquo;d like to generate abstract art, I&amp;rsquo;m calling the project GANdinsky.
In order for the network to be able to generate new art, you have to feed it samples of art it can generate from.</description></item><item><title>Lauching a Jupyter notebook from within a virtual environment</title><link>https://veekaybee.github.io/hugo-test/2020/02/18/lauching-a-jupyter-notebook-from-within-a-virtual-environment/</link><pubDate>Tue, 18 Feb 2020 00:00:00 +0000</pubDate><guid>https://veekaybee.github.io/hugo-test/2020/02/18/lauching-a-jupyter-notebook-from-within-a-virtual-environment/</guid><description>When I&amp;rsquo;m working with Jupyter notebooks, I often want to work with them from within a virtual environment. The general best practice is that you should always use either virtual environments or Docker containers for working with Python, for reasons outlined in this post, or you&amp;rsquo;re gonna have a bad time. I know I have.
The workflow is a little long, so I thought I&amp;rsquo;d document it for future me here.</description></item><item><title>How to make sure your question gets answered online</title><link>https://veekaybee.github.io/hugo-test/2019/09/11/how-to-make-sure-your-question-gets-answered-online/</link><pubDate>Wed, 11 Sep 2019 00:00:00 +0000</pubDate><guid>https://veekaybee.github.io/hugo-test/2019/09/11/how-to-make-sure-your-question-gets-answered-online/</guid><description>Saul Steinberg, Untitled (Question Marks) (1961)
Since writing my post on data science being different, a lot of people have emailed/DMed me asking for advice on Python, data science, machine learning, and careers.
And, as David wisely notes, if you find yourself saying the same thing a lot, you should put it in a blog post, so here it is.
Hopefully this advice is useful to people who write to others on the internet asking for help.</description></item><item><title>A deep dive on Python type hints</title><link>https://veekaybee.github.io/hugo-test/2019/07/08/a-deep-dive-on-python-type-hints/</link><pubDate>Mon, 08 Jul 2019 00:00:00 +0000</pubDate><guid>https://veekaybee.github.io/hugo-test/2019/07/08/a-deep-dive-on-python-type-hints/</guid><description>Table of Contents
Introduction How Computers Build Our Code An introduction to type systems Data types in statically versus dynamically typed languages How does Python handle data types? Python&amp;rsquo;s type hints Type hints in IDEs Getting started with type hints So, what&amp;rsquo;s the verdict? To use or not to use? Thanks Introduction Since the release of Python&amp;rsquo;s type hints in 2014, people have been working on adopting them into their codebase.</description></item><item><title>IT runs on Java 8</title><link>https://veekaybee.github.io/hugo-test/2019/05/10/it-runs-on-java-8/</link><pubDate>Fri, 10 May 2019 00:00:00 +0000</pubDate><guid>https://veekaybee.github.io/hugo-test/2019/05/10/it-runs-on-java-8/</guid><description>Sometime in 2011, I stumbled across an unassuming site called Hacker News. At the time, I was a data analyst working mostly with Excel and SAS, and almost all of the headlines there were foreign to me. Git diffs? PyPy? Real-time APIs?
I realized quickly, though, that HN was the heartbeat of the tech industry, the place where many threads and points of interest were discussed. There&amp;rsquo;s a lot to dislike about the commenters and some of the discussion generated, but I still don&amp;rsquo;t know of any other outlet like it for any other industry that allows the emerging practitioner to become quickly familiar with the latest news and slang of their given profession, with such a high discussion volume.</description></item><item><title>Breaking down Apple's iOS Screen Time report</title><link>https://veekaybee.github.io/hugo-test/2019/04/29/breaking-down-apples-ios-screen-time-report/</link><pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate><guid>https://veekaybee.github.io/hugo-test/2019/04/29/breaking-down-apples-ios-screen-time-report/</guid><description>One of the most valuable things I&amp;rsquo;ve learned in the early part of my career spent as a data janitor business analyst is how to put together visuals that are actionable. After all, as data professionals, we&amp;rsquo;re not putting together charts for the sake of looking good. If we were, we&amp;rsquo;d be the &amp;ldquo;Data is Ugly&amp;rdquo; subreddit. The point of a good chart is drive a person (usually the executive you&amp;rsquo;re presenting the chart to) to commit to an action.</description></item><item><title>The attic and the basement of apps</title><link>https://veekaybee.github.io/hugo-test/2019/04/11/the-attic-and-the-basement-of-apps/</link><pubDate>Thu, 11 Apr 2019 00:00:00 +0000</pubDate><guid>https://veekaybee.github.io/hugo-test/2019/04/11/the-attic-and-the-basement-of-apps/</guid><description>Building the Winter Studio. Ekely, Edvard Munch, 1929
My dad can do everything with his hands. From building shelves, to installing sump pumps, to fixing busted Soviet radios from the 1970s, there&amp;rsquo;s no problem he can&amp;rsquo;t solve.
Recently, my husband and I undertook what I envisioned as a really small house project: adding three shelves to a hallway closet to better store shoes and coats.
But when we went to the home improvement store, we were completely lost.</description></item><item><title>Data science is different now</title><link>https://veekaybee.github.io/hugo-test/2019/02/13/data-science-is-different-now/</link><pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate><guid>https://veekaybee.github.io/hugo-test/2019/02/13/data-science-is-different-now/</guid><description>Woman holding a balance, Vermeer 1664
What do you think of when you read the phrase &amp;lsquo;data science&amp;rsquo;? It&amp;rsquo;s probably some combination of keywords like statistics, machine learning, deep learning, and &amp;lsquo;sexiest job of the 21st century&amp;rsquo;. Or maybe it&amp;rsquo;s an image of a data scientist, sitting at her computer, putting together stunning visuals from well-run A/B tests. Either way, it&amp;rsquo;s glamorous, smart, and sophisticated. This is the narrative that data science has been selling since I entered the field almost ten years ago.</description></item><item><title>Commit to your lock-in</title><link>https://veekaybee.github.io/hugo-test/2019/02/10/commit-to-your-lock-in/</link><pubDate>Sun, 10 Feb 2019 00:00:00 +0000</pubDate><guid>https://veekaybee.github.io/hugo-test/2019/02/10/commit-to-your-lock-in/</guid><description>A rising concern as companies continue moving infrastructure to the cloud is vendor-lock in.
For example, I recently came across a post from 2017 discussing the impact of Lambdas locking you into the AWS ecosystem.
&amp;ldquo;It&amp;rsquo;s code that tied not just to hardware – which we&amp;rsquo;ve seen before – but to a data center, you can&amp;rsquo;t even get the hardware yourself. And that hardware is now custom fabbed for the cloud providers with dark fiber that runs all around the world, just for them.</description></item><item><title>How the headphone jack-less iPhone came to be</title><link>https://veekaybee.github.io/hugo-test/2018/11/05/how-the-headphone-jack-less-iphone-came-to-be/</link><pubDate>Mon, 05 Nov 2018 00:00:00 +0000</pubDate><guid>https://veekaybee.github.io/hugo-test/2018/11/05/how-the-headphone-jack-less-iphone-came-to-be/</guid><description>It so happened that one morning the devil was stuck in an Uber Pool down 101 from the city to Menlo Park (he was late for a meeting with the Facebook content moderation team,) when the driver suddenly took a huge detour and stopped at a leafy driveway in Atherton.
Phil Schiller emerged, wearing a slightly rumpled shirt and holding two iPhones in each hand. Another stuck out haphazardly from his back pocket.</description></item></channel></rss>