<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>★★Vicki Boykis★★</title>
    <link>https://veekaybee.github.io/hugo-test/</link>
    <description>Recent content on ★★Vicki Boykis★★</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Copyright © 2021, Vicki Boykis.</copyright>
    <lastBuildDate>Sun, 07 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://veekaybee.github.io/hugo-test/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The programmer&#39;s brain in the lands of exploration and production</title>
      <link>https://veekaybee.github.io/hugo-test/the-programmers-brain-in-the-lands-of-exploration-and-production/</link>
      <pubDate>Sun, 07 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/the-programmers-brain-in-the-lands-of-exploration-and-production/</guid>
      <description>A lot of my brain space lately has been occupied by TypedPipes. A TypedPipe is the main object type that you work with in Scalding, a distributed data framework written as a wrapper in Scala around Cascading. Scalding was originally developed at Twitter, and adopted by many companies around the same time Apache Spark became popular.
A TypedPipe is a distributed array that “may or may not have been materialized to disk”, aka it’s a very large list of elements that exists mainly in the memory space of your program, where the memory space is usually the nodes of a distributed computational cluster.</description>
    </item>
    
    <item>
      <title>Recsys 2021 Recap</title>
      <link>https://veekaybee.github.io/hugo-test/recsys-2021-recap/</link>
      <pubDate>Thu, 28 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/recsys-2021-recap/</guid>
      <description>Recsys 2021 was in October. Since I&amp;rsquo;m now focusing on this area of ML at work, I attended (virtually only, unfortunately, but the online experience was as good as it could be at a hybrid conference, so major hats off to the organizers!) at took around 30 pages of notes.
There was SO much content! In the interest of condensing my learnings before I forget them, here is some of the high-level content that was most interesting to me.</description>
    </item>
    
    <item>
      <title>Doing small, fun projects</title>
      <link>https://veekaybee.github.io/hugo-test/doing-small-fun-projects/</link>
      <pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/doing-small-fun-projects/</guid>
      <description>Last year, I gave a keynote at RStudio Conf where I encouraged people to fight the ennui of pandemic life and the boxed-in social platforms we operate on by building up their digital gardens.
I gave a few smaller examples of ways to do that, and now I have another one: building fun Streamlit apps.
Last year, I built a Streamlit app that did natural language processing to generate thinkpieces.</description>
    </item>
    
    <item>
      <title>Reaching MLE (machine learning enlightenment)</title>
      <link>https://veekaybee.github.io/hugo-test/reaching-mle-machine-learning-enlightenment/</link>
      <pubDate>Thu, 23 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/reaching-mle-machine-learning-enlightenment/</guid>
      <description>Once, on a crisp cloudless morning in early fall, a machine learning engineer left her home to seek the answers that she could not find, even in the newly-optimized Google results.
She closed her laptop, put on her backpack and hiking boots, and walked quietly out her door and past her mailbox, down a dusty path that led past a stream, until the houses around her gave way to broad fields full of ripening corn.</description>
    </item>
    
    <item>
      <title>The local minima of suckiness</title>
      <link>https://veekaybee.github.io/hugo-test/the-local-minima-of-suckiness/</link>
      <pubDate>Thu, 05 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/the-local-minima-of-suckiness/</guid>
      <description>Key and Hand, Tamara Lempicka, 1941
I don&amp;rsquo;t usually deal in absolutes, but I now know this one thing to be fundamentally true: no one becomes a good software engineer by themselves. But in an industry that has always prided itself on the myth of the superstar ninja, the lone wolf, the self-taught genius, it can seem like good developers are not born - they rise out of the ground, fully-formed and churning out PRs in their wake.</description>
    </item>
    
    <item>
      <title>Writing for distributed teams</title>
      <link>https://veekaybee.github.io/hugo-test/writing-for-distributed-teams/</link>
      <pubDate>Sat, 17 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/writing-for-distributed-teams/</guid>
      <description>This week was my first anniversary since I started at Automattic in the spring of 2020, and I was going through my work artifacts to reflect on what I&amp;rsquo;ve done so far this year. One thing that completely surprised me was that it turns out that I only sent 11 emails this entire year.
How is it possible? The answer is P2s.
For those not familiar with Automattic, the company behind WordPress.</description>
    </item>
    
    <item>
      <title>The ritual of the deploy</title>
      <link>https://veekaybee.github.io/hugo-test/the-ritual-of-the-deploy/</link>
      <pubDate>Sun, 20 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/the-ritual-of-the-deploy/</guid>
      <description>Humans have always been terrible at dealing with uncertainty. Historically, we used to cope with it by inventing superstitions. The ancient world is filled with rituals to ward off potential ill omens during times that were especially out of the control of human capability.
A big example of this has been seafaring. Since six months to a year in a ship headed to an unknown destination with unknown weather events was a high-anxiety event, humans developed a host of superstitions to deal with them.</description>
    </item>
    
    <item>
      <title>The humble hash aggregate</title>
      <link>https://veekaybee.github.io/hugo-test/the-humble-hash-aggregate/</link>
      <pubDate>Sun, 06 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/the-humble-hash-aggregate/</guid>
      <description>This post is an expansion of this tweet:
 One of the important ways we learn when we&amp;rsquo;re growing up is by understanding patterns. As a mom of two young children, I&amp;rsquo;ve been lucky enough to witness this happen multiple times in the wild. Recently, my youngest, who is almost two, has learned the Russian word &amp;ldquo;еще&amp;rdquo;, or &amp;ldquo;more.&amp;rdquo; He&amp;rsquo;ll say it when he wants a second (or third) slice of watermelon.</description>
    </item>
    
    <item>
      <title>The ghosts in the data</title>
      <link>https://veekaybee.github.io/hugo-test/the-ghosts-in-the-data/</link>
      <pubDate>Fri, 26 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/the-ghosts-in-the-data/</guid>
      <description>Bernadette Resha, Gathering of Ghosts (2014)
Something I&amp;rsquo;ve been thinking about recently as I&amp;rsquo;ve been working at a company that operates entirely remotely and mostly asynchronously during a time when most companies are working in some variation of this model is the idea of implicit versus explicit knowledge.
Explicit knowledge is anything that you can read about, knowledge that&amp;rsquo;s easy to share and pass on. Implicit knowledge is knowledge that people gain by context that&amp;rsquo;s very hard to pull out consciously.</description>
    </item>
    
    <item>
      <title>Getting machine learning to production</title>
      <link>https://veekaybee.github.io/hugo-test/getting-machine-learning-to-production/</link>
      <pubDate>Tue, 09 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/getting-machine-learning-to-production/</guid>
      <description>Table of Contents
 Intro The Mystery of Deploying ML Trying to Create Gandinsky Trying to Create Venti Venti Architecture  Generating Venti Inferences   Putting Venti on Streamlit Splitting out inference and front-end Deploying to the Cloud Lessons Learned  Deploying is hard Deep learning is deceptively easy Go for prebuilt as much as possible Understand networking and scale Iterate quickly    Art: The Other Side of the Rainbow, Roland Petersen, 1972</description>
    </item>
    
    <item>
      <title>Securely storing configuration credentials in a Jupyter Notebook</title>
      <link>https://veekaybee.github.io/hugo-test/securely-storing-configuration-credentials-in-a-jupyter-notebook/</link>
      <pubDate>Tue, 25 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/securely-storing-configuration-credentials-in-a-jupyter-notebook/</guid>
      <description>Art: Mona Lisa with the Keys, Fernand Leger, 1930
Over the past few months, I&amp;rsquo;ve been slowly working my way to building up an intuition neural nets through a Generative Adversarial Network project based off DCGAN, to generate new artworks in a given style.
Since I&amp;rsquo;d like to generate abstract art, I&amp;rsquo;m calling the project GANdinsky.
In order for the network to be able to generate new art, you have to feed it samples of art it can generate from.</description>
    </item>
    
    <item>
      <title>Lauching a Jupyter notebook from within a virtual environment</title>
      <link>https://veekaybee.github.io/hugo-test/lauching-a-jupyter-notebook-from-within-a-virtual-environment/</link>
      <pubDate>Tue, 18 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/lauching-a-jupyter-notebook-from-within-a-virtual-environment/</guid>
      <description>When I&amp;rsquo;m working with Jupyter notebooks, I often want to work with them from within a virtual environment. The general best practice is that you should always use either virtual environments or Docker containers for working with Python, for reasons outlined in this post, or you&amp;rsquo;re gonna have a bad time. I know I have.
The workflow is a little long, so I thought I&amp;rsquo;d document it for future me here.</description>
    </item>
    
    <item>
      <title>How to make sure your question gets answered online</title>
      <link>https://veekaybee.github.io/hugo-test/how-to-make-sure-your-question-gets-answered-online/</link>
      <pubDate>Wed, 11 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/how-to-make-sure-your-question-gets-answered-online/</guid>
      <description>Saul Steinberg, Untitled (Question Marks) (1961)
Since writing my post on data science being different, a lot of people have emailed/DMed me asking for advice on Python, data science, machine learning, and careers.
And, as David wisely notes, if you find yourself saying the same thing a lot, you should put it in a blog post, so here it is.
Hopefully this advice is useful to people who write to others on the internet asking for help.</description>
    </item>
    
    <item>
      <title>A deep dive on Python type hints</title>
      <link>https://veekaybee.github.io/hugo-test/a-deep-dive-on-python-type-hints/</link>
      <pubDate>Mon, 08 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/a-deep-dive-on-python-type-hints/</guid>
      <description>Table of Contents
 Introduction How Computers Build Our Code An introduction to type systems Data types in statically versus dynamically typed languages How does Python handle data types? Python&amp;rsquo;s type hints Type hints in IDEs Getting started with type hints So, what&amp;rsquo;s the verdict? To use or not to use? Thanks  Introduction Since the release of Python&amp;rsquo;s type hints in 2014, people have been working on adopting them into their codebase.</description>
    </item>
    
    <item>
      <title>IT runs on Java 8</title>
      <link>https://veekaybee.github.io/hugo-test/it-runs-on-java-8/</link>
      <pubDate>Fri, 10 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/it-runs-on-java-8/</guid>
      <description>Sometime in 2011, I stumbled across an unassuming site called Hacker News. At the time, I was a data analyst working mostly with Excel and SAS, and almost all of the headlines there were foreign to me. Git diffs? PyPy? Real-time APIs?
I realized quickly, though, that HN was the heartbeat of the tech industry, the place where many threads and points of interest were discussed. There&amp;rsquo;s a lot to dislike about the commenters and some of the discussion generated, but I still don&amp;rsquo;t know of any other outlet like it for any other industry that allows the emerging practitioner to become quickly familiar with the latest news and slang of their given profession, with such a high discussion volume.</description>
    </item>
    
    <item>
      <title>Breaking down Apple&#39;s iOS Screen Time report</title>
      <link>https://veekaybee.github.io/hugo-test/breaking-down-apples-ios-screen-time-report/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/breaking-down-apples-ios-screen-time-report/</guid>
      <description>One of the most valuable things I&amp;rsquo;ve learned in the early part of my career spent as a data janitor business analyst is how to put together visuals that are actionable. After all, as data professionals, we&amp;rsquo;re not putting together charts for the sake of looking good. If we were, we&amp;rsquo;d be the &amp;ldquo;Data is Ugly&amp;rdquo; subreddit. The point of a good chart is drive a person (usually the executive you&amp;rsquo;re presenting the chart to) to commit to an action.</description>
    </item>
    
    <item>
      <title>The attic and the basement of apps</title>
      <link>https://veekaybee.github.io/hugo-test/the-attic-and-the-basement-of-apps/</link>
      <pubDate>Thu, 11 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/the-attic-and-the-basement-of-apps/</guid>
      <description>Building the Winter Studio. Ekely, Edvard Munch, 1929
My dad can do everything with his hands. From building shelves, to installing sump pumps, to fixing busted Soviet radios from the 1970s, there&amp;rsquo;s no problem he can&amp;rsquo;t solve.
Recently, my husband and I undertook what I envisioned as a really small house project: adding three shelves to a hallway closet to better store shoes and coats.
But when we went to the home improvement store, we were completely lost.</description>
    </item>
    
    <item>
      <title>Data science is different now</title>
      <link>https://veekaybee.github.io/hugo-test/data-science-is-different-now/</link>
      <pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/data-science-is-different-now/</guid>
      <description>Woman holding a balance, Vermeer 1664
What do you think of when you read the phrase &amp;lsquo;data science&amp;rsquo;? It&amp;rsquo;s probably some combination of keywords like statistics, machine learning, deep learning, and &amp;lsquo;sexiest job of the 21st century&amp;rsquo;. Or maybe it&amp;rsquo;s an image of a data scientist, sitting at her computer, putting together stunning visuals from well-run A/B tests. Either way, it&amp;rsquo;s glamorous, smart, and sophisticated. This is the narrative that data science has been selling since I entered the field almost ten years ago.</description>
    </item>
    
    <item>
      <title>Commit to your lock-in</title>
      <link>https://veekaybee.github.io/hugo-test/commit-to-your-lock-in/</link>
      <pubDate>Sun, 10 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/commit-to-your-lock-in/</guid>
      <description>A rising concern as companies continue moving infrastructure to the cloud is vendor-lock in.
For example, I recently came across a post from 2017 discussing the impact of Lambdas locking you into the AWS ecosystem.
 &amp;ldquo;It&amp;rsquo;s code that tied not just to hardware – which we&amp;rsquo;ve seen before – but to a data center, you can&amp;rsquo;t even get the hardware yourself. And that hardware is now custom fabbed for the cloud providers with dark fiber that runs all around the world, just for them.</description>
    </item>
    
    <item>
      <title>How the headphone jack-less iPhone came to be</title>
      <link>https://veekaybee.github.io/hugo-test/how-the-headphone-jack-less-iphone-came-to-be/</link>
      <pubDate>Mon, 05 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/how-the-headphone-jack-less-iphone-came-to-be/</guid>
      <description>It so happened that one morning the devil was stuck in an Uber Pool down 101 from the city to Menlo Park (he was late for a meeting with the Facebook content moderation team,) when the driver suddenly took a huge detour and stopped at a leafy driveway in Atherton.
Phil Schiller emerged, wearing a slightly rumpled shirt and holding two iPhones in each hand. Another stuck out haphazardly from his back pocket.</description>
    </item>
    
    <item>
      <title>The Case of the Broken Lambda</title>
      <link>https://veekaybee.github.io/hugo-test/the-case-of-the-broken-lambda/</link>
      <pubDate>Mon, 24 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/the-case-of-the-broken-lambda/</guid>
      <description>Vincent van Gogh, Still Life with Drawing Board, Pipe, Onions and Sealing-Wax (1889)
Table of Contents
 Holmes takes on a new case The Case of the Broken Lambda  Getting S3 Input Events Writing the Lambda Building the Lambda Package The Error Investigating Snappy errors   Holmes is on it How the error was fixed Conclusion   Holmes takes on a new case Holmes and Watson were in Holmes&amp;rsquo;s study.</description>
    </item>
    
    <item>
      <title>On Excel and developer productivity</title>
      <link>https://veekaybee.github.io/hugo-test/on-excel-and-developer-productivity/</link>
      <pubDate>Sat, 08 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/on-excel-and-developer-productivity/</guid>
      <description>Kuzma Petrov-Vodkin, The girl at the desk (1934)
When I was just starting out in my professional life, I did a lot of Excel.
A LOT of Excel.
I graduated with a B.S. in Economics, outside the realm of anything remotely related to programming, and I didn&amp;rsquo;t realize there was another way to do things. Or rather, I vaguely realized there was something called &amp;ldquo;programming&amp;rdquo; out there, but it was so big and ungraspable that it wasn&amp;rsquo;t on my horizon.</description>
    </item>
    
    <item>
      <title>Good small datasets</title>
      <link>https://veekaybee.github.io/hugo-test/good-small-datasets/</link>
      <pubDate>Mon, 23 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/good-small-datasets/</guid>
      <description>I&amp;rsquo;ve been working on a project that, like most projects, requires testing with a dataset.
My personal criteria are:
 Relatively small size (Less than 100 KB, or 100ish rows) At least 5-6 features (columns) Should have both numerical and text-based features Ideally a range of different kinds of numbers Has good documentation Is open and available to the public Relatively available for both R and as individual CSV files or Python imports (APIs and download portals count-ish) Isn&amp;rsquo;t overly morbid (i.</description>
    </item>
    
    <item>
      <title>One month with the 2017 MacBook Pro</title>
      <link>https://veekaybee.github.io/hugo-test/one-month-with-the-2017-macbook-pro/</link>
      <pubDate>Mon, 02 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/one-month-with-the-2017-macbook-pro/</guid>
      <description>After reading so many negative reviews of the new MacBook Pro, I&amp;rsquo;ve been avoiding upgrading my hardware. I held out for a long time, but recently, I finally upgraded to a 15-inch 2017 MacBook Pro. I&amp;rsquo;ve spent the past month using it as my primary development machine for work, and I thought I&amp;rsquo;d share my experiences.
Unboxing and first impressions After I opened the MacBook box, I was surprised to find a small piece of paper resting on the laptop lid.</description>
    </item>
    
    <item>
      <title>Dear Facebook user 752461218193242</title>
      <link>https://veekaybee.github.io/hugo-test/dear-facebook-user-752461218193242/</link>
      <pubDate>Fri, 30 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/dear-facebook-user-752461218193242/</guid>
      <description>Apologies to Roy Lichtenstein
According to my Facebook data dump, Mark Zuckerberg knows my birthday, all 40 of my interests, my wedding anniversary, and that time in 2011 that I checked in at a castle in Scotland.
I&amp;rsquo;ve been a Facebook user since it became available to public universities in 2004 - almost fifteen years of my life and countless hours of effort have been put into status boxes, photo updates, and checkins.</description>
    </item>
    
    <item>
      <title>It&#39;s still hard for beginners to get started with Python</title>
      <link>https://veekaybee.github.io/hugo-test/its-still-hard-for-beginners-to-get-started-with-python/</link>
      <pubDate>Mon, 12 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/its-still-hard-for-beginners-to-get-started-with-python/</guid>
      <description>Python is, for a good reason, one of the easiest programming languages to get started with for people new to computational data analysis specifically, and new to programming in general.
But it&amp;rsquo;s still really hard to get started with. Allen Downey, who&amp;rsquo;s been teaching Python for years, recently wrote a great post about this. He says,
 I have written several books that use Python to explain topics like Bayesian Statistics and Digital Signal Processing.</description>
    </item>
    
    <item>
      <title>Building a Twitter art bot with Python, AWS, and socialist realism art</title>
      <link>https://veekaybee.github.io/hugo-test/building-a-twitter-art-bot-with-python-aws-and-socialist-realism-art/</link>
      <pubDate>Mon, 19 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/building-a-twitter-art-bot-with-python-aws-and-socialist-realism-art/</guid>
      <description>TLDR: I built a Twitter bot that tweets paintings from the WikiArt socialist realism category every 6 hours using Python and AWS Lambdas.
The post outlines why I decided to do that, architecture decisions I made, technical details on how the bot works, and my next steps for the bot.
Follow @SovietArtBot HereCheck out its website and code here.
Table of Contents
 Why build an art bot?  Technical Goals Personal Goals Why Socialist Realism   Breaking a Project into Chunks Requirements and Design: High-Level Bot Architecture Development: Pulling Paintings from WikiArt Development: Processing Paintings and Metadata Locally Development: Using S3 and Lambdas  Development: Scheduling the Lambda   Deployment: Bot Tweets!</description>
    </item>
    
    <item>
      <title>Strava and the boat in the data lake</title>
      <link>https://veekaybee.github.io/hugo-test/strava-and-the-boat-in-the-data-lake/</link>
      <pubDate>Tue, 30 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/strava-and-the-boat-in-the-data-lake/</guid>
      <description>Dutch Fishing Boats in a Storm, JMW Turner
Several years ago, I wrote that the Snowden revelations changed the way I understood the internet.
I wrote then, that,
 I spend a large majority of my day swimming in the sea of data online. I go to Facebook, Twitter, email, weather, this blog, and everywhere else. In the past, I’ve considered this world mine, safe and managed by me, as long as I was smart and sensible.</description>
    </item>
    
    <item>
      <title>Working with AWS</title>
      <link>https://veekaybee.github.io/hugo-test/working-with-aws/</link>
      <pubDate>Sun, 28 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/working-with-aws/</guid>
      <description>Clouds, Isaac Levitan
TL;DR: AWS is an extremely flexible environment to work in, but the flexibility can lead to an overwhelming amount of choices that may initially overwhelm and make someone used to working on-prem less productive until they get the hang of it.
More and more of my projects lately have been either doing data science on AWS, or moving data into AWS for data science, and I wanted to jot down some brief thoughts on coming from an on-prem background about what to expect from working in the cloud.</description>
    </item>
    
    <item>
      <title>Logs populi or, Thanks, Netflix!</title>
      <link>https://veekaybee.github.io/hugo-test/logs-populi-or-thanks-netflix/</link>
      <pubDate>Thu, 14 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/logs-populi-or-thanks-netflix/</guid>
      <description>Earlier this week, Netflix tweeted out a seemingly-innocuous throw-away joke about how comforting it is to watch terrible Lifetime-like movies.
The tweet immediately went viral, but not for the reason Netflix probably imagined. In the process of Brand Building, the company ultimately revealed that it was not above exposing proprietary customer viewing data to hundreds of thousands of people on Twitter for quick laughs.
There is a small caveat: having worked previously with streaming viewing data, I&amp;rsquo;m not entirely convinced the data in the tweet was real.</description>
    </item>
    
    <item>
      <title>Data ex machina</title>
      <link>https://veekaybee.github.io/hugo-test/data-ex-machina/</link>
      <pubDate>Mon, 11 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/data-ex-machina/</guid>
      <description>Washing Machine (1961), Roy Lichtenstein
Recently, Andrej Karpathy, head of AI at Tesla, wrote &amp;ldquo;Software 2.0.&amp;quot;, describing what he sees as a fundamental shift in the way software works. Software 1.0 is &amp;ldquo;explicit instructions to the computer written by a programmer.&amp;rdquo;
Instead of writing lines of code, he writes that, &amp;ldquo;Software 2.0 is written in neural network weights.&amp;rdquo;
 No human is involved in writing this code because there are a lot of weights (typical networks might have millions), and coding directly in weights is kind of hard (I tried).</description>
    </item>
    
    <item>
      <title>Recent podcast and radio appearences</title>
      <link>https://veekaybee.github.io/hugo-test/recent-podcast-and-radio-appearences/</link>
      <pubDate>Thu, 12 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/recent-podcast-and-radio-appearences/</guid>
      <description>I love exploring technical topics by writing about them. But, a lot of data science work involves explaining the breadth of your complicated model in 20 minutes at a meeting. So, I set a goal of becoming a better public speaker.
I&amp;rsquo;ve given a lot of conference talks, but this has been my first year being on both podcasts and public radio(!). What&amp;rsquo;s exciting and hard about audio (especially when it&amp;rsquo;s live) is that you have to express yourself clearly in a limited amount of time, knowing that the recording will then be around for posterity.</description>
    </item>
    
    <item>
      <title>Alice in Python projectland</title>
      <link>https://veekaybee.github.io/hugo-test/alice-in-python-projectland/</link>
      <pubDate>Tue, 26 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/alice-in-python-projectland/</guid>
      <description>Intro Python hides the hurt Building a simple word processor Creating a single object Combining objects into a program  Refactoring a single program   Combining programs into scripts Combining scripts into a module Project structure  Modular Code Unit Tests Requirements.txt and package dependencies Documentation Scripts __init__.py __main__.py driver setup.py   Sharing and using our package Next steps  Testing environments More advanced testing Continuous Integration Git Hooks and Version Control Setup.</description>
    </item>
    
    <item>
      <title>The demise of SoundCloud</title>
      <link>https://veekaybee.github.io/hugo-test/the-demise-of-soundcloud/</link>
      <pubDate>Fri, 11 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/the-demise-of-soundcloud/</guid>
      <description>They listen to the gramophone, Makovsky
The winter of 2005 was not easy. I was a sophomore in college, taking a heavy courseload, with a scholarship contingent on grades, and finals were right around the corner. I was also working two jobs. It was cold and dark in State College, Pennsylvania. My roommate and I didn&amp;rsquo;t get along - she wrote a public blog post detailing everything that annoyed her about me, including the fact that I was a loud chewer.</description>
    </item>
    
    <item>
      <title>Should Spark have an API for R?</title>
      <link>https://veekaybee.github.io/hugo-test/should-spark-have-an-api-for-r/</link>
      <pubDate>Thu, 20 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/should-spark-have-an-api-for-r/</guid>
      <description>Table of Contents
 The SparkR API: DataFrames are confusing Functionality, adoption, and commit velocity Inability to plot data Visibility into debugging Incomplete Documentation Conclusion  Goya, Fire at Night
As a consultant, I&amp;rsquo;m often asked to make tooling choices in big data projects: Should we use Python or R? What&amp;rsquo;s the best NoSQL datastore right now? How do we set up a data lake?
While I do keep up with data news, I don&amp;rsquo;t know everything that&amp;rsquo;s going on in the big data ecosystem, which now sprawls to over 2000 companies and products, and neither does anyone else working in the space.</description>
    </item>
    
    <item>
      <title>So, you want to data science</title>
      <link>https://veekaybee.github.io/hugo-test/so-you-want-to-data-science/</link>
      <pubDate>Mon, 19 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/so-you-want-to-data-science/</guid>
      <description>The hype of data science has dominated the tech scene for the last five years, an eternity an industry when the average interest cycle for, say, a JavaScript framework is 3.7 days.
And yet, data science, (and data engineering), is still a really young field that is not easily parsed by recruiters, managers making department budgeting decisions, and even data science practitioners themselves.
Add into the mix the latest buzz around AI and deep learning, and there are a lot of misconceptions about what data science is and what data scientists do.</description>
    </item>
    
    <item>
      <title>Setting up SQL for beginners is hard</title>
      <link>https://veekaybee.github.io/hugo-test/setting-up-sql-for-beginners-is-hard/</link>
      <pubDate>Thu, 20 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/setting-up-sql-for-beginners-is-hard/</guid>
      <description>Edvard Munch, Building The Winter Studio. Ekely
Although there has been a huge backlash against traditional programming paradigms, particularly relational databases, over the past several years, SQL is still one of the most popular programming languages.
First, it&amp;rsquo;s proven (working in production settings for over forty years). Second, its human-language-like syntax and declarative nature make it a perfect stepping stone for people who have zero programming knowledge and get overwhelmed by having to start learning by understanding data types and loops.</description>
    </item>
    
    <item>
      <title>Should you replace Hadoop with your laptop?</title>
      <link>https://veekaybee.github.io/hugo-test/should-you-replace-hadoop-with-your-laptop/</link>
      <pubDate>Mon, 20 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/should-you-replace-hadoop-with-your-laptop/</guid>
      <description>Vicki&amp;rsquo;s note: I&amp;rsquo;ve given this talk at Data Philly at Sidecar and Software as Craft at Promptworks. To see all the slides and the code, check out the original deck here.
This talk is not meant to discourage you from pursuing distributed, NoSQL systems, but to get you to think about tradeoffs. Every technical choice is a tradeoff for another one, and it&amp;rsquo;s important to understand what you&amp;rsquo;re keeping and giving up in each scenario.</description>
    </item>
    
    <item>
      <title>Being a woman in programming in the Soviet Union</title>
      <link>https://veekaybee.github.io/hugo-test/being-a-woman-in-programming-in-the-soviet-union/</link>
      <pubDate>Wed, 22 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/being-a-woman-in-programming-in-the-soviet-union/</guid>
      <description>Image source.
Vicki&amp;rsquo;s note: A couple weeks ago, I saw a really interesting clip on Twitter that showed students in the Soviet Union learning to program using pen and paper. My mom has often told stories about how she learned to program the same way, and I shared the tweet. Marie Hicks, a tech historian, reached out and asked if my mom would want to write about her experiences, and she did.</description>
    </item>
    
    <item>
      <title>What should you think about when using Facebook?</title>
      <link>https://veekaybee.github.io/hugo-test/what-should-you-think-about-when-using-facebook/</link>
      <pubDate>Wed, 01 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/what-should-you-think-about-when-using-facebook/</guid>
      <description>Courbet, The Winnowers
TL;DR: Facebook collects data about you in hundreds of ways, across numerous channels. It&amp;rsquo;s very hard to opt out, but by reading about what they collect, you can understand the risks of the platform and choose to be more restrictive with your Facebook usage.
Translations  Dutch translation here Big thank you to Ben! Portuguese translation here. Thank you to Ibrahim! Ukranian translation here French translation here Russian translation here Chinese translation here  Contents:</description>
    </item>
    
    <item>
      <title>Strata 2016 and the rise of New Data</title>
      <link>https://veekaybee.github.io/hugo-test/strata-2016-and-the-rise-of-new-data/</link>
      <pubDate>Thu, 06 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/strata-2016-and-the-rise-of-new-data/</guid>
      <description>Intro The last time I attended Strata + Hadoop World was in 2013. The conference was held at the New York Midtown Hilton for just a little over two days. Back then in the Stone Ages of Big Data, there was no Kafka, Spark, or Tensorflow.
Many teams were just beginning to explore realtime as a possibility, and the data formats we most associate with Hadoop today, Avro and Parquet, were just starting to gain traction as Apache projects.</description>
    </item>
    
    <item>
      <title>How to parse emails with Python (or, how I liberated my Strata schedule)</title>
      <link>https://veekaybee.github.io/hugo-test/how-to-parse-emails-with-python-or-how-i-liberated-my-strata-schedule/</link>
      <pubDate>Sun, 28 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/how-to-parse-emails-with-python-or-how-i-liberated-my-strata-schedule/</guid>
      <description>Strata, arguably the largest data science conference in the United States, is coming up in September and my company is sponsoring my trip there this year, so I&amp;rsquo;ve started planning out which sessions I&amp;rsquo;ll be attending.
One of the cool things you can do on the website for the conference is plan out your schedule beforehand by adding sessions to your calendar.
But I wanted to then share that calendar with a coworker who is also going and compare calendars with him.</description>
    </item>
    
    <item>
      <title>Walkthrough of Jupyter Lab Alpha</title>
      <link>https://veekaybee.github.io/hugo-test/walkthrough-of-jupyter-lab-alpha/</link>
      <pubDate>Wed, 24 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/walkthrough-of-jupyter-lab-alpha/</guid>
      <description>I love Jupyter notebooks as a replacement for REPL work, quick data manipulation with pandas, and visualization with matplotlib. I&amp;rsquo;ve also had great experiences sharing them with executives, who need to look at multiple pieces of data quickly to make decisions.
For all their Swiss army knife capabilities though, notebooks are terrible at code continuity.
For example, it&amp;rsquo;s a pain to get [version control set up.] (https://www.r-bloggers.com/why-i-dont-like-jupyter-fka-ipython-notebook/)
Because cells are really easy to move up and down, because code can change within cells, and because closing unsaved notebooks in the browser is easy, it&amp;rsquo;s very hard to track the lineage (aka what&amp;rsquo;s going on, when) of a specific notebook.</description>
    </item>
    
    <item>
      <title>My recent experiences using Azure ML</title>
      <link>https://veekaybee.github.io/hugo-test/my-recent-experiences-using-azure-ml/</link>
      <pubDate>Fri, 19 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/my-recent-experiences-using-azure-ml/</guid>
      <description>I never thought I&amp;rsquo;d write &amp;ldquo;Microsoft&amp;rdquo; and &amp;ldquo;exciting&amp;rdquo; in the same sentence.
I started my data career using Excel, which is a great tool for prototyping and sharing data quickly, and has been used by many people as a gateway to learning programming through VBA, but has none of the features someone serious about working with data could get behind: version control, testing, code review,cross-platform compatibility, or more than 1 million rows.</description>
    </item>
    
    <item>
      <title>Why doesn&#39;t MySQL have window functions?</title>
      <link>https://veekaybee.github.io/hugo-test/why-doesnt-mysql-have-window-functions/</link>
      <pubDate>Thu, 07 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/why-doesnt-mysql-have-window-functions/</guid>
      <description>*Updated with comments from MySQL at end of post. *
I&amp;rsquo;ve worked with a lot of the different flavors of SQL, including Oracle, SQL Server, Postgres, and SQLite, so I thought I knew all nuances of different SQL syntaxes. But I&amp;rsquo;ve recently been working with a project that&amp;rsquo;s using a LAMP stack, so I&amp;rsquo;ve gotten a lot more understanding of the MySQL&amp;rsquo;s caveats.
I&amp;rsquo;m working on some data manipulation that requires window functions in MySQL, and I learned the hard way that MySQL doesn&amp;rsquo;t support them.</description>
    </item>
    
    <item>
      <title>Data strategy in 2016</title>
      <link>https://veekaybee.github.io/hugo-test/data-strategy-in-2016/</link>
      <pubDate>Mon, 04 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/data-strategy-in-2016/</guid>
      <description>I gave a talk in May about how to pick a data architecture strategy in 2016. Thanks to Promptworks for hosting and recording! All the slides are here.</description>
    </item>
    
    <item>
      <title>How to keep up with the data industry today?</title>
      <link>https://veekaybee.github.io/hugo-test/how-to-keep-up-with-the-data-industry-today/</link>
      <pubDate>Thu, 23 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/how-to-keep-up-with-the-data-industry-today/</guid>
      <description>A coworker recently asked how people keep up with everything that&amp;rsquo;s going on in Big Data, and I ended up writing a lot, which I thought I&amp;rsquo;d post here.
For reference, I do daily work as a data scientist mostly in Python these days, but I&amp;rsquo;ve done R and Hadoop in the past.
I see Big Data as a subset of data engineering, which is really just a subset of overall development concepts, so while I try to read articles specific to new data technologies like Spark and Cassandra, I also read as many general development sources as I can to better understand systems.</description>
    </item>
    
    <item>
      <title>Building presentations the hard way with reveal.js and Jupyter</title>
      <link>https://veekaybee.github.io/hugo-test/building-presentations-the-hard-way-with-reveal.js-and-jupyter/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/building-presentations-the-hard-way-with-reveal.js-and-jupyter/</guid>
      <description>I&amp;rsquo;ve been working for a presentation on a talk I&amp;rsquo;m giving in a couple weeks, and the audience is fairly technical. All the cool kids are using reveal.js for technical presentations for the past couple years.
I&amp;rsquo;m thinking it&amp;rsquo;s for a couple reasons:
 clonable as a GitHub repo beautiful themes and typefaces capitalizing on increase in static pages/ Javascript trend free and available on every machine that&amp;rsquo;s connected to the internet (Powerpoint is not)  Although I was won over by how nice it looked, I wasn&amp;rsquo;t too familiar with reveal and didn&amp;rsquo;t feel like going through the documentation.</description>
    </item>
    
    <item>
      <title>Learning tech by analogy</title>
      <link>https://veekaybee.github.io/hugo-test/learning-tech-by-analogy/</link>
      <pubDate>Sat, 09 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/learning-tech-by-analogy/</guid>
      <description>I entered the tech industry through SQL. When I came to work as a business analyst, I was handed the credentials to an Oracle database, pointers to some tables, and let loose.
Because SQL is declarative, it&amp;rsquo;s probably the least intimidating programming language to start with, and it remains one of my favorite technologies because what you see is mostly what you get.
But coming from the world of consulting where all I knew were spreadsheets and manipulating tabs upon tabs of pivot tables, I had no clue what was going on.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://veekaybee.github.io/hugo-test/</link>
      <pubDate>Thu, 07 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/</guid>
      <description>It&amp;rsquo;s 2016. I shouldn&amp;rsquo;t have to write a scraping script to extract the information I need from the webpage of a magazine article. But that&amp;rsquo;s exactly what I had to do in February when I needed information on switching between Android and iOS.
I was wondering what the transfer process was like (for phone numbers, specifically) from Android to iPhone, so I went to the Googles and searched for &amp;ldquo;&amp;ldquo;Android to iOS&amp;rdquo; or something similar.</description>
    </item>
    
    <item>
      <title>Starting to dig inside Spark RDDs</title>
      <link>https://veekaybee.github.io/hugo-test/starting-to-dig-inside-spark-rdds/</link>
      <pubDate>Tue, 29 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/starting-to-dig-inside-spark-rdds/</guid>
      <description>A lot of the Spark documentation has examples using either the Scala spark-shell or the Python pyspark repl. These are really great to test out code fragments, especially for Scala, which needs to be packaged.
So you get a lot of examples like this:
textFile.map(line =&amp;gt; line.split(&amp;quot; &amp;quot;).size).reduce((a, b) =&amp;gt; if (a &amp;gt; b) a else b)
What&amp;rsquo;s the next step to writing production-grade, reproducible apps?
Let&amp;rsquo;s say we have some log data in HDFS already: Using some fake log data I generated with this excellent script:</description>
    </item>
    
    <item>
      <title>Let&#39;s work on the hard stuff</title>
      <link>https://veekaybee.github.io/hugo-test/lets-work-on-the-hard-stuff/</link>
      <pubDate>Wed, 09 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/lets-work-on-the-hard-stuff/</guid>
      <description>Last week, I got an email from a friend about a new startup that &amp;ldquo;hand-picks a box of snacks and sends it to your home,&amp;rdquo; started by a group of entrepreneurs who &amp;ldquo;wanted a better way to snack.&amp;rdquo;
Several days after I read about this startup, I was watching my seven-month-old play on rug next to me, when I felt my chest tighten in a new and frightening way. I ignored the pain for several minutes while hoping with every fiber of my being that I wasn&amp;rsquo;t experiencing symptoms of cardiac arrest.</description>
    </item>
    
    <item>
      <title>How non-technical teams work together</title>
      <link>https://veekaybee.github.io/hugo-test/how-non-technical-teams-work-together/</link>
      <pubDate>Wed, 26 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/how-non-technical-teams-work-together/</guid>
      <description>I work as a data scientist. I&amp;rsquo;m also in my last semester as an MBA student. One of the most important things I&amp;rsquo;ve learned over the course of the program is how differently technical and business people think.
There is a huge push today for society to become technically literate, particularly given that the Robots are Coming. But the opposite is true as well. It is for technical people to understand the non-technical mindset, particularly given that most people, even if they work in the tech industry, report to executives who are well-versed in their industries and the nuances of corporate life, but are not necessarily technically savvy, at least in the way developers define it.</description>
    </item>
    
    <item>
      <title>Generating fake Hacker News headlines with Python</title>
      <link>https://veekaybee.github.io/hugo-test/generating-fake-hacker-news-headlines-with-python/</link>
      <pubDate>Mon, 24 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/generating-fake-hacker-news-headlines-with-python/</guid>
      <description>###TL;DR: All the code for this post is here.
One of my favorite hobbies is making up fake Hacker News headlines because they&amp;rsquo;re just so easy to parody (i.e. they follow a predictable pattern using most of the same topics and wording.)
 How to implement Rust in Go in a 3-line interpreter Ask HN: How do I serve better artisans beer at my startup? Javascript A [PDF] from some obscure industry journal from (1975) This outrageous thing is happening to our internet Isomorphic Javascript This outrageous thing is not happening to our internet Steve Jobs was a jerk Node.</description>
    </item>
    
    <item>
      <title>How large should your sample size be?</title>
      <link>https://veekaybee.github.io/hugo-test/how-large-should-your-sample-size-be/</link>
      <pubDate>Tue, 04 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/how-large-should-your-sample-size-be/</guid>
      <description>I read a recent interview with Hadley Wickham. Two things stood out to me.
The first is how down-to-earth he seems, even given how well-known he is in the data science community.
The second was this quote:
 Big data problems [are] actually small data problems, once you have the right subset/sample/summary. Inventing numbers on the spot, I’d say 90% of big data problems fall into this category.
 ##The technical side of sampling</description>
    </item>
    
    <item>
      <title>Who is doing this to my internet?</title>
      <link>https://veekaybee.github.io/hugo-test/who-is-doing-this-to-my-internet/</link>
      <pubDate>Tue, 28 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/who-is-doing-this-to-my-internet/</guid>
      <description>A couple of years ago, I went to a talk called &amp;ldquo;Who&amp;rsquo;s Doing This Horsesh-t to My Internet,&amp;quot;.
I don&amp;rsquo;t remember much of the talk (it had to do with net neutrality and DMCA takedown notices, the two main things plaguing the spread of free internet at the time), but the title has stuck with me through the years.
At the time of the talk, the internet was still relatively intact.</description>
    </item>
    
    <item>
      <title>Cumulative totals three different ways in data science</title>
      <link>https://veekaybee.github.io/hugo-test/cumulative-totals-three-different-ways-in-data-science/</link>
      <pubDate>Wed, 08 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/cumulative-totals-three-different-ways-in-data-science/</guid>
      <description>The data analysis field has moved away from querying tools like Crystal Reports (shudder), OLAP cubes, and Excel, to programming languages closer to the raw data.
I primarily work with IPython notebooks, R, and SQL these days, and I thought it would be interesting to look at the differences between these three tools and three ways of thinking through a single task.
Something people often ask of data scientists (or analysts or engineers or what have you) is to just find out how many total customers the company has from the very beginning on a cumulative basis.</description>
    </item>
    
    <item>
      <title>How many people are actually using your stuff?</title>
      <link>https://veekaybee.github.io/hugo-test/how-many-people-are-actually-using-your-stuff/</link>
      <pubDate>Mon, 15 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/how-many-people-are-actually-using-your-stuff/</guid>
      <description>Five million years after it became popular, I&amp;rsquo;ve gotten into Spotify. The thing I like the most about the service is the curated content.
When I was working with television viewing data, my boss at the time had a hypothesis that there are two viewing behaviors,
 Flipping through the channels to see what&amp;rsquo;s on or Actively seeking out a show.  The same is true for music: you&amp;rsquo;re either actively looking for a song, or you want to listen to a &amp;ldquo;channel.</description>
    </item>
    
    <item>
      <title>Really easy data concepts that get abused all the time</title>
      <link>https://veekaybee.github.io/hugo-test/really-easy-data-concepts-that-get-abused-all-the-time/</link>
      <pubDate>Tue, 09 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/really-easy-data-concepts-that-get-abused-all-the-time/</guid>
      <description>The more we make things easier for the human brain to understand, the easier it is to make data-driven decisions because we don&amp;rsquo;t have to spend time understanding the data.
Two particular things that are abused a lot are:
 Not including percentages for comparison Comparing two completely different numbers  Amazon was guilty of this until very recently. So, I was pleasantly surprised when I logged into Amazon this morning.</description>
    </item>
    
    <item>
      <title>What do we do with all these photos?</title>
      <link>https://veekaybee.github.io/hugo-test/what-do-we-do-with-all-these-photos/</link>
      <pubDate>Wed, 03 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/what-do-we-do-with-all-these-photos/</guid>
      <description>When I go to visit my grandfather, I often enjoy looking at our family photo album. He was born in the 1930s in the Soviet Union and the pictures start sometime in the 1950s, when he married my grandmother, and go all the way up to today.
That photo album survived 40 years in communism, three apartments, a trans-Atlantic move to the United States, and two moves in Philadelphia. There are maybe 300 pictures in the album, and every single one of them is interesting.</description>
    </item>
    
    <item>
      <title>Creating readable SQL.</title>
      <link>https://veekaybee.github.io/hugo-test/creating-readable-sql./</link>
      <pubDate>Tue, 02 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/creating-readable-sql./</guid>
      <description>Writing legible code is seen as the hallmark of a competent developer, and for good reason. If you can&amp;rsquo;t read what you wrote, you can&amp;rsquo;t change what you wrote. There are lots of organizations, especially once you get to larger companies where programming isn&amp;rsquo;t the core competency or value center, that are prime examples of this. The result is a mess that not only impacts the code, but the entire company or business.</description>
    </item>
    
    <item>
      <title>How to get into big data</title>
      <link>https://veekaybee.github.io/hugo-test/how-to-get-into-big-data/</link>
      <pubDate>Mon, 01 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/how-to-get-into-big-data/</guid>
      <description>A couple of weeks ago, I gave a talk at Philly Women in Tech on how to get into the field of big data to a diverse group of women both in tech fields and not.
The slides are here:
but I didn&amp;rsquo;t take my own advice from my last post and didn&amp;rsquo;t add any context to each slide so you could tell what was going on without having been at my talk.</description>
    </item>
    
    <item>
      <title>I&#39;m not so sure about Tufte</title>
      <link>https://veekaybee.github.io/hugo-test/im-not-so-sure-about-tufte/</link>
      <pubDate>Sun, 31 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/im-not-so-sure-about-tufte/</guid>
      <description>A couple years ago, I was fortunate enough to be able to catch Edward Tufte, the father of the current wave of thinking about data visualization, at a seminar he was giving in Philadelphia.
I, like many people at the seminar, were really excited by the examples of visual presentation based on Tufte&amp;rsquo;s books, as well as his declaration that PowerPoint is evil.
But, looking back on the seminar, I can&amp;rsquo;t say that I came away with anything practical to take back to work.</description>
    </item>
    
    <item>
      <title>Man, do static sites suck.</title>
      <link>https://veekaybee.github.io/hugo-test/man-do-static-sites-suck./</link>
      <pubDate>Sat, 30 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/man-do-static-sites-suck./</guid>
      <description>Whenever I click on HackerNews links these days, I see a TON of statically-generated sites either through Jekyll or Octopress or (in the Python community) Pelican. This trend has been particularly strong over the past three years or so. These themes always look really clean and, for some reason, the essays/thoughts come through more well-organized and cleaner than on Wordpress, which has been my blogging platform of choice [for over 6 years] (http://blog.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://veekaybee.github.io/hugo-test/essays/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://veekaybee.github.io/hugo-test/essays/</guid>
      <description>asdfsa asdfsadf asdfsafd</description>
    </item>
    
  </channel>
</rss>
